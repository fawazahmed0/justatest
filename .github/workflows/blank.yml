# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
    paths:
    - 'qdata/*'
  pull_request:
    branches: [ master ]
    paths:
    - 'qdata/*'



# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Runs a single command using the runners shell
      - name: Partial clone and push
        run: |
          REPO="https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"
          git config --global user.email github-actions@github.com
          git config --global user.name github-actions
          git clone --filter=blob:none --no-checkout --depth 1  --sparse $REPO repo
          cd repo
          git sparse-checkout init --cone
          git sparse-checkout add "New folder"
          git checkout
          ls
          cp -a package.json ../
          cp -a requirements.txt ../
      # touch trt2
      #  git add -A
      #  git commit -m "artifcat"
      #  git push

      - run: mkdir -p mydir

      - run: echo hello > mydir/world.txt

      - run: |
          pwd
          ls

      - uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: mydir/world.txt

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install python Dependencies
        run: |
          sudo apt-get install python3-setuptools
          pip3 install setuptools googletrans

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm install
